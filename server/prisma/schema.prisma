

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id           String   @id @default(cuid())
  name         String?
  email        String   @unique
  password     String
  role         Role     @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  refreshToken String?  @unique
  cart         Cart?
  addresses    Address[]
}


model product {
  id            String   @id @default(cuid())
  name          String
  brand         String
  description   String
  category      String
  gender        String
  sizes         String[]
  colors        String[]
  price         Float
  originalPrice Float
  stock         Int
  soldCount     Int
  rating        Float?
  images        String[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  isFeatured    Boolean  @default(false)
}

model Coupon {
  id              String   @id @default(cuid())
  code            String   @unique
  discountPercent Float
  startDate       DateTime
  endDate         DateTime
  usageLimit      Int
  usageCount      Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model FeatureBanner {
  id        String   @id @default(cuid())
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Cart {
  id        String     @id @default(cuid())
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        String   @id @default(cuid())
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId String
  quantity  Int
  size      String?
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId, size, color])
}

model Address {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  name       String
  address    String
  city       String
  country    String
  postalCode String
  phone      String
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId])
}





enum Role{
USER
ADMIN
}

